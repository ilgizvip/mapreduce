Перем СчетчикБлоков;
Перем ВыборкаКлючей;

//Shuffle
Перем СчетчикБлоковСорт;
Перем МассивКлючей;
Перем КоличествоШафл;

#Область ПрограммныйИнтерфейс

Функция ПолучитьСледующийБлокДанных(ВыходныеДанные) Экспорт
	
	Если СчетчикБлоков >= КоличествоБлоковШагаМАП Тогда
		Возврат Ложь;
	КонецЕсли;
	
	РазмерШага = (ДатаОкончания - ДатаНачала) / КоличествоБлоковШагаМАП;
	
	ДатаН = ДатаНачала + СчетчикБлоков * РазмерШага;
	СчетчикБлоков = СчетчикБлоков + 1;
	ДатаК = ДатаНачала + СчетчикБлоков * РазмерШага;
	
	Если КоличествоБлоковШагаМАП = СчетчикБлоков Тогда
		ДатаК = ДатаОкончания;
	КонецЕсли;
	
	Выборка = ПолучитьДанныеИзБазы(ДатаН, ДатаК);
	ВыходныеДанные = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		Структура = Новый Структура();
		Структура.Вставить("Регистратор");
		Структура.Вставить("Период");
		Структура.Вставить("Город");
		Структура.Вставить("Товар");
		Структура.Вставить("Количество");
		Структура.Вставить("Цена");
		Структура.Вставить("Сумма");
		ЗаполнитьЗначенияСвойств(Структура, Выборка);
		ВыходныеДанные.Добавить(Структура);
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьСледующийБлокСортированныхДанных(ВыходныеДанные) Экспорт
	
	Если МассивКлючей = Неопределено Тогда
		МассивКлючей = ПолучитьКлючи();	
		СчетчикБлоковСорт = 0;
		КоличествоШафл = КоличествоБлоковШагаШафл;
	КонецЕсли;
	
	Если СчетчикБлоковСорт >= КоличествоШафл Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Если КоличествоШафл=0 Тогда
		РазмерБлока = МассивКлючей.Количество();
	ИначеЕсли МассивКлючей.Количество() <= КоличествоШафл Тогда
		РазмерБлока = 1;
		КоличествоШафл = МассивКлючей.Количество();
	Иначе
		РазмерБлока = ЦЕЛ(МассивКлючей.Количество() / КоличествоШафл);
	КонецЕсли;
	
	Начало = РазмерБлока * СчетчикБлоковСорт;
	СчетчикБлоковСорт = СчетчикБлоковСорт + 1;
	Конец = РазмерБлока * СчетчикБлоковСорт;
	Конец = МИН(Конец, МассивКлючей.Количество());
	
	Если СчетчикБлоковСорт = КоличествоШафл Тогда
		Конец = МассивКлючей.Количество();	
	КонецЕсли;
	
	КлючиДляВыборки = Новый Массив;
	Для сч = Начало По Конец-1 Цикл
		КлючиДляВыборки.Добавить(МассивКлючей.Получить(сч));
	КонецЦикла;
	
	ВыходныеДанные = Новый Массив;
	Выборка = ПолучитьВыборкуДанныхПоКлючам(КлючиДляВыборки);
	
	Пока Выборка.Следующий() Цикл
		Структура = Новый Структура();
		Структура.Вставить("Ключ");
		Структура.Вставить("Количество");
		Структура.Вставить("Сумма");
		ЗаполнитьЗначенияСвойств(Структура, Выборка);
		ВыходныеДанные.Добавить(Структура);
	КонецЦикла;
	
	Возврат Истина;
		
КонецФункции

#КонецОбласти

#Область Служебные

Функция ПолучитьДанныеИзБазы(ДатаН, ДатаК)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	мрДанные.Регистратор КАК Регистратор,
	|	мрДанные.Период КАК Период,
	|	мрДанные.Город КАК Город,
	|	мрДанные.Товар КАК Товар,
	|	мрДанные.Количество КАК Количество,
	|	мрДанные.Цена КАК Цена,
	|	мрДанные.Сумма КАК Сумма
	|ИЗ
	|	РегистрСведений.мрДанные КАК мрДанные
	|ГДЕ
	|	мрДанные.Период МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаН);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаК);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выбрать();
		
КонецФункции

Функция ПолучитьКлючи()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мрСортированныеДанные.Ключ КАК Ключ
		|ИЗ
		|	Справочник.мрСортированныеДанные КАК мрСортированныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	мрСортированныеДанные.Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();	

	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ключ");
	
КонецФункции

Функция ПолучитьВыборкуДанныхПоКлючам(КлючиДляВыборки)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мрСортированныеДанныеДанные.Сумма КАК Сумма,
		|	мрСортированныеДанныеДанные.Количество КАК Количество,
		|	мрСортированныеДанныеДанные.Ссылка КАК Ключ
		|ИЗ
		|	Справочник.мрСортированныеДанные.Данные КАК мрСортированныеДанныеДанные
		|ГДЕ
		|	мрСортированныеДанныеДанные.Ссылка.Ключ В(&КлючиДляВыборки)";
	
	Запрос.УстановитьПараметр("КлючиДляВыборки", КлючиДляВыборки);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

#КонецОбласти

СчетчикБлоков = 0;