
Процедура ПоместитьПараметрыВХранилищеОбщихНастроек(Параметры) Экспорт
	ХранилищеОбщихНастроек.Сохранить(ПолучитьКлючОбъектаВХранилищеОбщихНастроек(), Параметры.КлючНастроек, Параметры);
КонецПроцедуры

Процедура Уснуть(Параметры) Экспорт
	мзЗадания.Спать(Параметры.Секунды);
КонецПроцедуры

Процедура ПадающееЗадание(Параметры) Экспорт
	ВызватьИсключение "Ой!";
КонецПроцедуры

Процедура ЗаданиеФеникс(Параметры) Экспорт
	Если Не Параметры.ИзОчереди Тогда
		мзЗадания.ДобавитьЗаданиеВнеОчереди("Тестирование.ЗаданиеФеникс", Новый Структура("ИзОчереди", Ложь));
		
		мзЗадания.Спать(1);
		
		ГСЧ = Новый ГенераторСлучайныхЧисел;
		СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 60);
		Если СлучайноеЧисло = 1 Тогда
			мзЗадания.ДобавитьЗадание("Тестирование.ЗаданиеФеникс", Новый Структура("ИзОчереди", Истина));
		КонецЕсли;
	КонецЕсли;
	
	мзЗадания.Спать(1);
КонецПроцедуры

// { Служебные
Функция ПолучитьКлючИсполнителя(КлючЗадания, Таймаут = 5) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	мзЗадания.КлючИсполнителя
	|ИЗ
	|	РегистрСведений.мзЗадания КАК мзЗадания
	|ГДЕ
	|	мзЗадания.Ключ = &КлючЗадания";
	Запрос.УстановитьПараметр("КлючЗадания", КлючЗадания);
	
	КлючИсполнителя = Неопределено;
	ВремяВРаботе = 0;
	Пока ВремяВРаботе < Таймаут Цикл
		РезультатЗапроса = Запрос.Выполнить();
		
		КлючИсполнителя = РезультатЗапроса.Выгрузить()[0].КлючИсполнителя;
		Если ЗначениеЗаполнено(КлючИсполнителя) Тогда
			Прервать;
		КонецЕсли;
		
		ВремяВРаботе = ВремяВРаботе + мзЗадания.Спать(1);
	КонецЦикла;
	
	Возврат КлючИсполнителя;
КонецФункции

Функция ПолучитьКлючОбъектаВХранилищеОбщихНастроек() Экспорт
	КлючОбъекта = "Тестирование";
	
	Возврат КлючОбъекта;
КонецФункции
// }