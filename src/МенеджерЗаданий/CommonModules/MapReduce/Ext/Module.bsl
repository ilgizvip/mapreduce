#Область ПрограммныйИнтерфейс


//Точка входа в процесс расчета
//	Параметры: 
//	МенеджерДанных - объект - объект с экспортным методом получения блока данных 
//		ПолучитьСледующийБлокДанных(БлокДанных), который при успешном получении данных возвращает ИСТИНА
//		Данные возвращаются в фактическом параметре "БлокДанных"
//	ИмяМетодаMap, ИмяМетодаShuffle, ИмяМетодаReduce - Строка - имена экспортных методов соот-их функций общего модуля
Процедура ЗапуститьПроцессMapReduce(МенеджерДанных) Экспорт
		
	МассивЗаданий = Новый Массив;
	БлокДанных = Неопределено;
	
	Пока МенеджерДанных.ПолучитьСледующийБлокДанных(БлокДанных) Цикл
		ПараметрыЗадания = Новый Структура;
		ПараметрыЗадания.Вставить("Данные", БлокДанных);
		КлючЗадания = мзЗадания.ДобавитьЗадание(МенеджерДанных.ИмяМетодаMap(), ПараметрыЗадания);
		МассивЗаданий.Добавить(КлючЗадания);
	КонецЦикла;
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("КлючиЗаданий", 	МассивЗаданий);
	ПараметрыЗадания.Вставить("ИмяМетодаReduce", МенеджерДанных.ИмяМетодаReduce());
	ПараметрыЗадания.Вставить("Таймаут", МенеджерДанных.Таймаут);
	
	мзЗадания.ДобавитьЗадание(МенеджерДанных.ИмяМетодаShuffle(), ПараметрыЗадания);
	
КонецПроцедуры

Процедура Map(Параметры) Экспорт 
	Данные = Параметры.Данные;
КонецПроцедуры

Процедура Shuffle(Параметры) Экспорт
	
	ДождалисьЗавершенияMap = мзЗадания.ДождатьсяВыполнения(Параметры.КлючиЗаданий, Параметры.Таймаут);
	
	Если ДождалисьЗавершенияMap Тогда
		
		МассивЗаданий = Новый Массив;
		РезультатЗапроса = ПолучитьРезультатЭтапаМап();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда			
			ВыборкаКлюч = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаКлюч.Следующий() Цикл
				МассивДанных = Новый Массив;
				ВыборкаДетальныеЗаписи = ВыборкаКлюч.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					МассивДанных.Добавить(ВыборкаДетальныеЗаписи.Данные);
				КонецЦикла;
				
				ПараметрыЗадания = Новый Структура;
				ПараметрыЗадания.Вставить("Данные", МассивДанных);
				КлючЗадания = мзЗадания.ДобавитьЗадание(Параметры.ИмяМетодаReduce, ПараметрыЗадания);
				МассивЗаданий.Добавить(КлючЗадания);
				
			КонецЦикла;
			
		КонецЕсли;
		
		ДождалисьЗавершенияReduce = мзЗадания.ДождатьсяВыполнения(МассивЗаданий, Параметры.Таймаут);
		
		Если ДождалисьЗавершенияReduce Тогда
			//TODO все хорошо завершилось
		Иначе			
			//TODO все плохо не дождались завершения задач
		КонецЕсли;
	Иначе
		//TODO все плохо не дождались завершения задач
		Для каждого КлючьЗадания Из Параметры.КлючиЗаданий Цикл
			мзЗадания.ОтменитьЗадание(КлючьЗадания);			
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура Reduce(Параметры) Экспорт 
	
КонецПроцедуры

#КонецОбласти

#Область Служебные

Функция ПолучитьРезультатЭтапаМап()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мрРезультатыМаппинга.Ключ КАК Ключ,
		|	мрРезультатыМаппинга.Данные КАК Данные
		|ИЗ
		|	РегистрСведений.мрРезультатыМаппинга КАК мрРезультатыМаппинга
		|ИТОГИ ПО
		|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса;

КонецФункции

#КонецОбласти